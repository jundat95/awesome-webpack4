(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["npm.tuxjs~._node_modules_@tuxjs_eventbus_bin_EventBus.js~ba24d969"],{

/***/ "uiTZ":
/*!******************************************************!*\
  !*** ./node_modules/@tuxjs/eventbus/bin/EventBus.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Subcriber = /** @class */ (function () {
    function Subcriber(id, eventType, callback, unSubcribe) {
        this.id = id;
        this.eventType = eventType;
        this.callback = callback;
        this.unSubcribe = unSubcribe;
    }
    Subcriber.prototype.unsubcribe = function () {
        this.unSubcribe(this.id, this.eventType);
    };
    return Subcriber;
}());
exports.Subcriber = Subcriber;
var EventBus = /** @class */ (function () {
    function EventBus() {
        this.subscriptions = new Map();
    }
    EventBus.prototype.publish = function (eventType, agrs) {
        if (!this.subscriptions.has(eventType))
            return;
        this.subscriptions.get(eventType).forEach(function (sub) {
            sub.callback(agrs);
        });
    };
    EventBus.prototype.subcribe = function (eventType, callback) {
        var _this = this;
        var id = Symbol(eventType);
        var subcriber = new Subcriber(id, eventType, callback, function (idUnSubcriber, eventTypeSubcriber) {
            for (var i = 0; i < _this.subscriptions.get(eventTypeSubcriber).length; i++) {
                if (idUnSubcriber === id) {
                    _this.subscriptions.get(eventTypeSubcriber).splice(i, 1);
                }
            }
        });
        if (this.subscriptions.has(eventType)) {
            this.subscriptions.get(eventType).push(subcriber);
        }
        else {
            this.subscriptions.set(eventType, [subcriber]);
        }
        return subcriber;
    };
    EventBus.prototype.getSubcribers = function () {
        return this.subscriptions;
    };
    return EventBus;
}());
exports.default = EventBus;
//# sourceMappingURL=EventBus.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR1eGpzL2V2ZW50YnVzL2Jpbi9FdmVudEJ1cy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWE7QUFDYiw4Q0FBOEMsY0FBYztBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsd0RBQXdEO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG9DIiwiZmlsZSI6Im5wbS50dXhqc34uX25vZGVfbW9kdWxlc19AdHV4anNfZXZlbnRidXNfYmluX0V2ZW50QnVzLmpzfmJhMjRkOTY5LmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIFN1YmNyaWJlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBTdWJjcmliZXIoaWQsIGV2ZW50VHlwZSwgY2FsbGJhY2ssIHVuU3ViY3JpYmUpIHtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgICAgICB0aGlzLmV2ZW50VHlwZSA9IGV2ZW50VHlwZTtcbiAgICAgICAgdGhpcy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgICB0aGlzLnVuU3ViY3JpYmUgPSB1blN1YmNyaWJlO1xuICAgIH1cbiAgICBTdWJjcmliZXIucHJvdG90eXBlLnVuc3ViY3JpYmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMudW5TdWJjcmliZSh0aGlzLmlkLCB0aGlzLmV2ZW50VHlwZSk7XG4gICAgfTtcbiAgICByZXR1cm4gU3ViY3JpYmVyO1xufSgpKTtcbmV4cG9ydHMuU3ViY3JpYmVyID0gU3ViY3JpYmVyO1xudmFyIEV2ZW50QnVzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEV2ZW50QnVzKCkge1xuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIEV2ZW50QnVzLnByb3RvdHlwZS5wdWJsaXNoID0gZnVuY3Rpb24gKGV2ZW50VHlwZSwgYWdycykge1xuICAgICAgICBpZiAoIXRoaXMuc3Vic2NyaXB0aW9ucy5oYXMoZXZlbnRUeXBlKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25zLmdldChldmVudFR5cGUpLmZvckVhY2goZnVuY3Rpb24gKHN1Yikge1xuICAgICAgICAgICAgc3ViLmNhbGxiYWNrKGFncnMpO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIEV2ZW50QnVzLnByb3RvdHlwZS5zdWJjcmliZSA9IGZ1bmN0aW9uIChldmVudFR5cGUsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBpZCA9IFN5bWJvbChldmVudFR5cGUpO1xuICAgICAgICB2YXIgc3ViY3JpYmVyID0gbmV3IFN1YmNyaWJlcihpZCwgZXZlbnRUeXBlLCBjYWxsYmFjaywgZnVuY3Rpb24gKGlkVW5TdWJjcmliZXIsIGV2ZW50VHlwZVN1YmNyaWJlcikge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpcy5zdWJzY3JpcHRpb25zLmdldChldmVudFR5cGVTdWJjcmliZXIpLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlkVW5TdWJjcmliZXIgPT09IGlkKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnN1YnNjcmlwdGlvbnMuZ2V0KGV2ZW50VHlwZVN1YmNyaWJlcikuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbnMuaGFzKGV2ZW50VHlwZSkpIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5nZXQoZXZlbnRUeXBlKS5wdXNoKHN1YmNyaWJlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbnMuc2V0KGV2ZW50VHlwZSwgW3N1YmNyaWJlcl0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzdWJjcmliZXI7XG4gICAgfTtcbiAgICBFdmVudEJ1cy5wcm90b3R5cGUuZ2V0U3ViY3JpYmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3Vic2NyaXB0aW9ucztcbiAgICB9O1xuICAgIHJldHVybiBFdmVudEJ1cztcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBFdmVudEJ1cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV2ZW50QnVzLmpzLm1hcCJdLCJzb3VyY2VSb290IjoiIn0=